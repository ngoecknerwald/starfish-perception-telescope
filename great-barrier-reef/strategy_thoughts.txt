Neil's overall competition battle plan.

Overall plan:

Make a Faster R-CNN implementation fine-tuned for this specific problem. There is some documentation
for what that would look like in the following places:

R-CNN

https://towardsdatascience.com/r-cnn-for-object-detection-a-technical-summary-9e7bfa8a557c
https://arxiv.org/pdf/1311.2524.pdf

Fast R-CNN

https://towardsdatascience.com/fast-r-cnn-for-object-detection-a-technical-summary-a0ff94faa022
https://arxiv.org/pdf/1504.08083.pdf

Faster R-CNN

https://towardsdatascience.com/faster-r-cnn-for-object-detection-a-technical-summary-474c5b857b46
https://arxiv.org/pdf/1506.01497.pdf

There are also some canned pre-trained models available from the TensorFlow developer hub, see

https://www.tensorflow.org/hub/tutorials/tf2_object_detection
https://tfhub.dev/tensorflow/collections/object_detection/1

Other questions:

1) Do we use data augmentation? If so, how? Random rotations, random deformations, 
and "level of blue-ness" or "light / dark" could be good things to try.

2) There is almost certainly information to be gained by using the previous several video frames to reinforce 
or discourage the current image frame from claiming there is a starfish. I wonder if there is a way to 
"register" the frames together so that an area in one frame can be unambiguously matched to the same 
area in subsequent frames.

For the backbone weights, Neil is going to argue that we should use

https://tfhub.dev/google/imagenet/inception_resnet_v2/feature_vector/5

Notes from Sam on running in colab:

* All the online guides tell you to use bang (like !pip install ) for shell commands inside a notebook but you can 
    also just open a terminal (bottom left corner). I ran all the kaggle commands this way after mounting my drive (see below).

* Somehow you can't roam around your drive until you run
    from google.colab import drive
    drive.mount('/content/drive')
inside a notebook and reauthorize drive access. Still trying to find a way around this.

* After mounting, your main drive will sit in /content/drive/MyDrive
* Even though you use bang (!) to run shell commands, you have to use %cd to change directories inside the notebook 
    (! calls a separate shell, % accesses the shell your notebook is running in through ipython magic)
* I couldn't download the data til I ran
    !pip uninstall -y kaggle
    !pip install --upgrade pip
    !pip install kaggle==1.5.6
* Easiest way I found to clone the repo was to generate an access token on github.com -> user icon -> settings 
    -> developer settings -> personal access tokens, and then use the Colab terminal to git clone https://token@github....
* You can edit .py files in Colab by clicking on the "Files" menu in the left hand pane 
    (different from "File" in top menu bar) and double clicking a py file. This will open a text editor tab in the same subwindow as the terminal.
